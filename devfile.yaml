schemaVersion: 2.2.0
metadata:
  name: api-rust
  version: 2.1.0
  description: Rust API template
  language: rust
  projectType: rust
  provider: Batleforc
  tags:
    - Rust
    - API
    - Web
    - Tracing
    - Prometheus
    - Postgresql
    - OpenAPI
    - Swagger
    - Actix
    - Totp
  displayName: Rust API
  icon: https://www.rust-lang.org/logos/rust-logo-128x128-blk.png
variables:
  pgsql_db: "postgres"
  pgsql_user: "postgres"
  pgsql_password: "postgres"

components:
  - name: rust
    container:
      image: rust:1.68.0
      memoryLimit: 512Mi
      mountSources: true
      endpoints:
        - name: "rust"
          targetPort: 5437
      env:
        - name: RUST_LOG
          value: info
        - name: RUST_BACKTRACE
          value: "1"
        - name: "DB_HOST"
          value: "postgres"
        - name: "DB_PORT"
          value: "5432"
        - name: "DB_USER"
          value: "{{ pgsql_user }}"
        - name: "DB_PASSWORD"
          value: "{{ pgsql_password }}"
        - name: "DB_DATABASE"
          value: "{{ pgsql_db }}"
        - name: "DB_LOAD_DATASET"
          value: "true"
        - name: "OTEL_EXPORTER_JAEGER_ENDPOINT"
          value: "http://jaeger-collector.jaeger.svc.cluster.local:14268/api/traces"
      volumeMounts:
        - name: cargo
          path: /usr/local/cargo
        - name: rustup
          path: /usr/local/rustup
        - name: rust
          path: /usr/local/rust
  - name: postgres
    container:
      image: postgres:15-alpine
      memoryLimit: 512Mi
      env:
        - name: postgres_user
          value: "{{ pgsql_user }}"
        - name: postgres_password
          value: "{{ pgsql_password }}}"
        - name: postgres_db
          value: "{{ pgsql_db }}"
      endpoints:
        - name: postgres
          targetPort: 5432
          exposure: none
  - name: cargo
    volume:
      size: 2Gi
  - name: rustup
    volume:
      size: 2Gi
  - name: rust
    volume:
      size: 2Gi
commands:
  - id: build
    exec:
      component: rust
      commandLine: cargo build
      workingDir: /projects
      group:
        kind: build
        isDefault: true
  - id: run
    exec:
      component: rust
      commandLine: cargo run
      workingDir: /projects
      group:
        kind: run
        isDefault: true
starterProjects:
  - name: rust-api
    description: Rust API template
    subDir: rust-api
    git:
      remotes:
        origin: https://github.com/batleforc/rust-template.git
